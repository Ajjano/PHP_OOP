 <?php
     class  Point{
         private $x;
         private $y;

         public function __construct($x, $y)
         {
             $this->x=$x;
             $this->y=$y;
         }

         public function Show(){
             echo "Vars: x=$this->x, y=$this->y"."<br>";
         }


     }
     class PointExt{
         protected $x,$y;

         public function __construct($x,$y)
         {
             $this->x=$x;
             $this->y=$y;
         }
         public function Show(){
             echo "Vars: x=$this->x, y=$this->y"."<br>";
         }
     }


     class Rectangle extends PointExt{
         protected $width, $height;

         public function __construct($x, $y, $width, $height)
         {
             parent::__construct($x, $y);
             $this->width=$width;
             $this->height=$height;
         }
         public function Show()
         {
             parent::Show(); // TODO: Change the autogenerated stub
             echo "with w=$this->width, h=$this->height"."<br>";
         }


     }

     abstract class PointAbs{
         protected $x;
         protected $y;

         public function __construct($x, $y)
         {
             $this->x=$x;
             $this->y=$y;
         }

         public function Show(){
             echo "Vars: x=$this->x, y=$this->y"."<br>";
         }

         abstract function Area();
         abstract  function Perimeter();
     }

     class RectangleAbs extends PointAbs{

         protected  $width,$height;
         public function __construct($x, $y, $width, $height)
         {
             parent::__construct($x, $y);
             $this->height=$height;
             $this->width=$width;
         }

         function Area()
         {
             echo "Area: ".$this->width*$this->height."<br>";
         }

          function Perimeter()
         {
             echo "Perimeter: ".(($this->width+$this->height)*2)."<br>";
         }
     }
 class CircleAbs extends PointAbs{
         const PI=M_PI;
     protected  $radius;
     public function __construct($x, $y, $radius)
     {
         parent::__construct($x, $y);
         $this->radius=$radius;
     }

     function Area()
     {
         echo "Area: ".(($this->radius**2)*self::PI)."<br>";
     }

     function Perimeter()
     {
         echo "Perimeter: ".($this->radius*2*M_PI)."<br>";
     }
 }

 interface Geometry{
         const PI=M_PI;
         function Area();
         function Perimeter();
 }
 class CircleInterface implements Geometry {

     function Area()
     {
         // TODO: Implement Area() method.
     }

     function Perimeter()
     {
         // TODO: Implement Perimeter() method.
     }
 }

